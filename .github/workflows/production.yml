name: React App Deploy - PRODUCTION

on:
  push:
    tags:
      - release-v*

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      
      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm install

      - name: Build React app
        env:
          RUST_BACKTRACE: 1 # Enable Rust backtrace for more detailed error logs
        run: npm run build

      - name: Empty Bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET_DEV: ${{ secrets.AWS_S3_BUCKET_PROD }}
        run: aws s3 rm s3://ngo-saldobooks-portal-prod.saldobooks.com/ --recursive --region ap-south-1

      - name: Deploy Into Bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws s3 cp ./dist s3://ngo-saldobooks-portal-prod.saldobooks.com/ --recursive --region ap-south-1

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@master
        env:
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         DISTRIBUTION: ${{ secrets.PROD_CLOUD_FRONT_ID }}
         PATHS: '/*'
         AWS_REGION: "us-east-1"
